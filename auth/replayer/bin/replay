#!/usr/bin/env node

// Copyright (c) 2019, 2021, Oracle and/or its affiliates.

const path = require('path');

// Command-line parser
const yargs = require("yargs");

const argv = yargs
    .option('log', {
        describe: 'Path to a request log file in CommonJS format',
        type: 'string'
    })
    .option('logs', {
        describe: 'Path to an array, in commonJS format, listing request logs to use',
        type: 'string'
    })
    .check((argv) => {
        if ((argv.log && argv.logs) || (!argv.log && !argv.logs)) {
            throw new Error('Please specify exactly one of the log or logs option')
        }
        return true;
    })
    .option('config', {
        describe: 'Path to a replayer configuration file in CommonJS format',
        type: 'string'
    })
    .option('verbose', {
        describe: 'Verbose',
        type: 'boolean',
        default: false
    })
    .option('host', {
        describe: 'Hostname',
        type: 'string',
        default: 'localhost'
    })
    .option('port', {
        describe: 'Port',
        type: 'number',
        default: 3000
    })
    .option('store', {
        describe: 'The location to store the authentication tokens',
        type: 'string',
        default: './'
    })
    .argv;

const options = {};

if (argv.log) {
    options.log = require(path.resolve(argv.log));
} else {
    let log = [];
    const log_dir = path.dirname(argv.logs);
    const logs = require(path.resolve(argv.logs));
    for (const l of logs) {
        log = log.concat(require(path.resolve(path.join(log_dir,l))));
    }
    options.log = log;
}

// Replayer config object
options.replay_opts = {};
if (argv.config) {
    options.replay_opts = require(path.resolve(argv.config));
}

options.baseUrl = 'http://'+argv.host+':'+argv.port;
options.verbose = argv.verbose;

// The location to store the authentication tokens
// Default at "./"
// This value is used in config.js for each application
options.storeLocation = path.resolve(argv.store);

require('..')(options);
